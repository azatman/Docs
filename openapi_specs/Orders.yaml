openapi: 3.0.3
info:
  title: Yandex.Eats API
  version: 1.0.0
  description: An API for managing orders and menu
servers:
  - url: https://example.com/api/v1
    description: Production server
tags:
  - name: Orders
    description: Operations related to orders
paths:
  /Orders/Create:
    post:
      tags:
        - Orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "201":
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /Orders/Update:
    put:
      tags:
        - Orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: Order updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the profile
          readOnly: true
        products:
          $ref: "#/components/schemas/Products"
        totalAmount:
          $ref: "#/components/schemas/TotalAmount"
        status:
          type: string
          description: Phone number of the user
          enum: 
            - "Created"
            - "Processing"
            - "In transit"
            - "Delivered"
            - "Cancelled"
            - "Completed"
    Products:
          type: object
          description: Information about products
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: "Beef burger"
            description:
              type: string
              example: "Tasty, delicious, and has me craving more on the first bite."
            image:
              type: string
              example: "example.com/classic-beef-burger-recipe-zero-belly"
    TotalAmount:
      type: object
      description: Information about price
      properties:
        price:
         type: number
         example: 2537.73
        currency:
         type: string
         example: "Rub"
        symbolCurrency: 
          type: string
          example: "â‚½"
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: Numeric error code
          example: 400
        message:
          type: string
          description: Error message
          example: "Invalid input data provided"
